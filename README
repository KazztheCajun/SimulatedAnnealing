###Simulated Annealing Agorithms

SerialSA.c -- An implimentation of my simulated annealing algorithm designed to execute total iterations in serial (loop 1 then loop 2 then loop 3)

ParallelSA.c -- Initial Open MP implimentation of my SA algorithm, designed to execute the total iterations in parallel in a Shared Memory environment.

BenchmarkPSA_OMP.c -- Modified implimentation of ParallelSA, designed to accept input values for the hyperparameters in order to tune them for future experiments.

MPI_PSA.c



**************************** HOW TO RUN THE CODE *********************************************

To run the Serial BFS Algorithm, use the command "./sb 6 16 [starting node]"

It is currently hard coded to run the test graph I made and output the graph and then the navigation of it to the console

The MPI BFS is still under construction.  Currently it only explores the provided root node and then crashes with a segmentation fault.

Unfortunatly, due to time, I have been unable to diagnose exactly what is causeing the crash; however, I believe it lies in my Scatterv and Gatherv logic, but I just ran out of time to tweak the code and get it working.

Also, due to being unable to finish the MPI implimentation, I was unable to get to the hybrid OpenMP and MPI implimentations.
